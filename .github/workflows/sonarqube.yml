name: Build and Analyze

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-analyze:
    name: .NET + Angular Analysis
    runs-on: ubuntu-latest  # We switch to Ubuntu for better multi-tool support

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x'

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install SonarScanner for .NET
        run: |
          dotnet tool install --global dotnet-sonarscanner

      - name: .NET Core Begin Analysis
        run: |
          dotnet-sonarscanner begin /k:"DevSecOpsApp" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
        env:
          PATH: ${{ runner.tool_cache }}/dotnet-sonarscanner:${{ env.PATH }}

      - name: Build .NET Core
        run: dotnet build

      - name: .NET Core End Analysis
        run: |
          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
        env:
          PATH: ${{ runner.tool_cache }}/dotnet-sonarscanner:${{ env.PATH }}

      - name: Install SonarScanner CLI
        run: |
          npm install -g sonar-scanner

      - name: Angular Analysis (ClientApp)
        working-directory: ./ClientApp
        run: |
          sonar-scanner \
            -Dsonar.projectKey=DevSecOpsApp \
            -Dsonar.sources=src \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.typescript.tsconfigPath=tsconfig.json
